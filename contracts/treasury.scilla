scilla_version 0

(***************************************************)
(*               Associated library                *)
(***************************************************)

library TreasuryLib

let one_msg =
  fun (msg: Message) =>
  let nil_msg = Nil {Message} in
  Cons {Message} msg nil_msg



(***************************************************)
(*             Contract definition                 *)
(***************************************************)

contract Treasury

(* Immutable fields declaration *)
(
    init_owner : ByStr20,
    proxy_address : ByStr20
)

(* Mutable fields declaration *)

field owner : ByStr20 = init_owner

(* Transitions *)

transition RecipientAcceptTransfer (sender : ByStr20, recipient : ByStr20, amount : Uint128)

end

transition Transfer(to : ByStr20,  amount : Uint128, tokenAddress : ByStr20)
  msg = {_tag: "Transfer"; _recipient: tokenAddress; _amount: Uint128 0; to: to; amount: amount};
  msgs = one_msg msg;
  send msgs
end

transition TransferSuccessCallBack (sender : ByStr20, recipient : ByStr20, amount : Uint128)

end