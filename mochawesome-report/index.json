{
  "stats": {
    "suites": 7,
    "tests": 19,
    "passes": 11,
    "pending": 8,
    "failures": 0,
    "start": "2020-11-09T09:10:35.031Z",
    "end": "2020-11-09T09:10:35.791Z",
    "duration": 760,
    "testsRegistered": 19,
    "passPercent": 100,
    "pendingPercent": 42.10526315789473,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "06b71d94-350b-45a2-b557-6a9746b47f5e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7d89377f-3e0c-4e09-80fe-f851553c1965",
          "title": "Base Contract Tests",
          "fullFile": "/Users/adam/OFFICE/CRYPTO/GenesysLabs/Treasury/test/test.js",
          "file": "/test/test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f2416cdc-80cb-498f-827b-b37f1e760a81",
              "title": "Connect to Zilliqa Blockchain",
              "fullFile": "/Users/adam/OFFICE/CRYPTO/GenesysLabs/Treasury/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should run on node version v10",
                  "fullTitle": "Base Contract Tests Connect to Zilliqa Blockchain should run on node version v10",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const node_version = process.version;\nconst ok = (node_version.substring(0,4) == 'v10.');\nexpect(ok).to.be.true;",
                  "err": {},
                  "uuid": "dfb9404d-1807-4527-ab1e-30ed426a26e4",
                  "parentUUID": "f2416cdc-80cb-498f-827b-b37f1e760a81",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should connect to the blockchain and get the right chain_id",
                  "fullTitle": "Base Contract Tests Connect to Zilliqa Blockchain should connect to the blockchain and get the right chain_id",
                  "timedOut": false,
                  "duration": 123,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "zilliqa = new Zilliqa(network);\nconst network_id = await zilliqa.network.GetNetworkId();\nconst id = parseInt(network_id.result)\nexpect(id).to.equal(chain_id)",
                  "err": {},
                  "uuid": "4c5761e1-c5b5-46d1-9d1a-13cb5bc495f1",
                  "parentUUID": "f2416cdc-80cb-498f-827b-b37f1e760a81",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have the right test account",
                  "fullTitle": "Base Contract Tests Connect to Zilliqa Blockchain should have the right test account",
                  "timedOut": false,
                  "duration": 97,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "zilliqa.wallet.addByPrivateKey(privateKey);\naddress = getAddressFromPrivateKey(privateKey).toLowerCase();\nconst ok = addressEqual(address, account_address);\nexpect(ok).to.be.true;",
                  "err": {},
                  "uuid": "a30dccd8-312f-4c31-9b74-523b5c2dc4cf",
                  "parentUUID": "f2416cdc-80cb-498f-827b-b37f1e760a81",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have at least 10 ZIL in the account",
                  "fullTitle": "Base Contract Tests Connect to Zilliqa Blockchain should have at least 10 ZIL in the account",
                  "timedOut": false,
                  "duration": 53,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const bal_obj = await zilliqa.blockchain.getBalance(address);\nconst balance_BN = new BN(bal_obj.result.balance);\nconst min_amount_BN = units.toQa(10, units.Units.Zil);\nconst ok = balance_BN.gte(min_amount_BN);\nexpect(ok).to.be.true;",
                  "err": {},
                  "uuid": "90d98bf2-e9e7-4435-8532-1d7a0dda5821",
                  "parentUUID": "f2416cdc-80cb-498f-827b-b37f1e760a81",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dfb9404d-1807-4527-ab1e-30ed426a26e4",
                "4c5761e1-c5b5-46d1-9d1a-13cb5bc495f1",
                "a30dccd8-312f-4c31-9b74-523b5c2dc4cf",
                "90d98bf2-e9e7-4435-8532-1d7a0dda5821"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 275,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "33522dd7-9124-49f5-a626-9261753fc168",
              "title": "Deployment Checks",
              "fullFile": "/Users/adam/OFFICE/CRYPTO/GenesysLabs/Treasury/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should read contract source",
                  "fullTitle": "Base Contract Tests Deployment Checks should read contract source",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let ok = false;\n      try {\n          code = fs.readFileSync('contracts/treasury.scilla', 'utf-8');\n          ok = true;\n      } catch (err) {\n        throw err \n      }\n      expect(ok).to.be.true;",
                  "err": {},
                  "uuid": "172384aa-5b42-4de3-ad3f-638f4b6e9f0a",
                  "parentUUID": "33522dd7-9124-49f5-a626-9261753fc168",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should deploy the contract",
                  "fullTitle": "Base Contract Tests Deployment Checks should deploy the contract",
                  "timedOut": false,
                  "duration": 385,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(timeout_deploy);\nthis.slow(timeout_deploy / 2);\nconst MSG_VERSION = 1;\nconst VERSION = bytes.pack(chain_id, MSG_VERSION);\nconst myGasPrice = units.toQa('1000', units.Units.Li);\nconst init = [\n  { vname: '_scilla_version', type: 'Uint32', value: '0'},\n  { vname: 'init_admin', type:  'ByStr20', value: address },\n  { vname: 'init_company', type:  'ByStr20', value: address },\n  { vname: 'proxy_address', type:  'ByStr20', value: address },\n  { vname: 'token_address', type:  'ByStr20', value: address },\n  { vname: 'base_value', type:  'Uint256', value: '1000' }\n];\nconst contract = zilliqa.contracts.new(code, init);\n[deployTx, treasury] = await contract.deploy({\n  version: VERSION,\n  gasPrice: myGasPrice,\n  gasLimit: Long.fromNumber(15000),\n});\n//console.log(deployTx);\nconsole.log(\"        contract address =\", treasury.address);\nexpect(deployTx.txParams.receipt.success).to.be.true;",
                  "err": {},
                  "uuid": "79002f38-3863-4397-9745-542bae068b25",
                  "parentUUID": "33522dd7-9124-49f5-a626-9261753fc168",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have correct admin address",
                  "fullTitle": "Base Contract Tests Deployment Checks should have correct admin address",
                  "timedOut": false,
                  "duration": 36,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "allState = await treasury.getState();\nexpect(allState.admin).to.equal(address)",
                  "err": {},
                  "uuid": "2e10ec33-6c9f-46d0-b7e9-2cbf02134e04",
                  "parentUUID": "33522dd7-9124-49f5-a626-9261753fc168",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have correct company address",
                  "fullTitle": "Base Contract Tests Deployment Checks should have correct company address",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(allState.company).to.equal(address)",
                  "err": {},
                  "uuid": "bf69e50f-ce35-47f4-a05d-c7cbf4c54bfb",
                  "parentUUID": "33522dd7-9124-49f5-a626-9261753fc168",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have correct base price",
                  "fullTitle": "Base Contract Tests Deployment Checks should have correct base price",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(allState.token_price).to.equal('1000')",
                  "err": {},
                  "uuid": "40769f3d-85d1-489d-b10f-9fcf85c58b9e",
                  "parentUUID": "33522dd7-9124-49f5-a626-9261753fc168",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be \"paused\" on contract creation",
                  "fullTitle": "Base Contract Tests Deployment Checks should be \"paused\" on contract creation",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(allState.paused.constructor).to.equal('True')",
                  "err": {},
                  "uuid": "3528db88-4509-49e9-9e3f-ccf99fb50dc2",
                  "parentUUID": "33522dd7-9124-49f5-a626-9261753fc168",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not be \"under funded\" on contract creation",
                  "fullTitle": "Base Contract Tests Deployment Checks should not be \"under funded\" on contract creation",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(allState.under_funded.constructor).to.equal('False')",
                  "err": {},
                  "uuid": "c9ab6eeb-b0ec-4a73-b70c-6a2beab76ba4",
                  "parentUUID": "33522dd7-9124-49f5-a626-9261753fc168",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "172384aa-5b42-4de3-ad3f-638f4b6e9f0a",
                "79002f38-3863-4397-9745-542bae068b25",
                "2e10ec33-6c9f-46d0-b7e9-2cbf02134e04",
                "bf69e50f-ce35-47f4-a05d-c7cbf4c54bfb",
                "40769f3d-85d1-489d-b10f-9fcf85c58b9e",
                "3528db88-4509-49e9-9e3f-ccf99fb50dc2",
                "c9ab6eeb-b0ec-4a73-b70c-6a2beab76ba4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 423,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "062b8a47-8d75-47ac-ab45-5c6dcb254ffb",
          "title": "Contract Tests",
          "fullFile": "/Users/adam/OFFICE/CRYPTO/GenesysLabs/Treasury/test/test.js",
          "file": "/test/test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ea6dff7f-f6e9-4b92-bcd5-e59c6d7d1bfa",
              "title": "Management Functions",
              "fullFile": "/Users/adam/OFFICE/CRYPTO/GenesysLabs/Treasury/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "773917e7-56e3-4a0b-83c4-371f2163daa1",
                  "title": "Pausing Related Transitions",
                  "fullFile": "/Users/adam/OFFICE/CRYPTO/GenesysLabs/Treasury/test/test.js",
                  "file": "/test/test.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should only allow admin to pause when unpaused",
                      "fullTitle": "Contract Tests Management Functions Pausing Related Transitions should only allow admin to pause when unpaused",
                      "timedOut": false,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "61cdbdfb-313d-46c3-ae08-d7656ae1dec5",
                      "parentUUID": "773917e7-56e3-4a0b-83c4-371f2163daa1",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should only allow admin to unpause when paused",
                      "fullTitle": "Contract Tests Management Functions Pausing Related Transitions should only allow admin to unpause when paused",
                      "timedOut": false,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "c8014315-a1b2-41a3-af33-e4a8ea68c3ee",
                      "parentUUID": "773917e7-56e3-4a0b-83c4-371f2163daa1",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not only pausing if not admin",
                      "fullTitle": "Contract Tests Management Functions Pausing Related Transitions should not only pausing if not admin",
                      "timedOut": false,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "d93c853d-faec-416e-93d2-dd3547da4f6a",
                      "parentUUID": "773917e7-56e3-4a0b-83c4-371f2163daa1",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not only unpausing if not admin",
                      "fullTitle": "Contract Tests Management Functions Pausing Related Transitions should not only unpausing if not admin",
                      "timedOut": false,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "a80ca0c0-88af-4436-9ed3-038da7dee5b4",
                      "parentUUID": "773917e7-56e3-4a0b-83c4-371f2163daa1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [],
                  "failures": [],
                  "pending": [
                    "61cdbdfb-313d-46c3-ae08-d7656ae1dec5",
                    "c8014315-a1b2-41a3-af33-e4a8ea68c3ee",
                    "d93c853d-faec-416e-93d2-dd3547da4f6a",
                    "a80ca0c0-88af-4436-9ed3-038da7dee5b4"
                  ],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "99db100f-ee1f-4eaa-a20a-56f6fde041d7",
                  "title": "Admin Related Transitions",
                  "fullFile": "/Users/adam/OFFICE/CRYPTO/GenesysLabs/Treasury/test/test.js",
                  "file": "/test/test.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should allow admin to change admin",
                      "fullTitle": "Contract Tests Management Functions Admin Related Transitions should allow admin to change admin",
                      "timedOut": false,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "3e465ce0-a7b0-4290-9b8e-cc3f89e766a5",
                      "parentUUID": "99db100f-ee1f-4eaa-a20a-56f6fde041d7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not allow changing admin if not admin",
                      "fullTitle": "Contract Tests Management Functions Admin Related Transitions should not allow changing admin if not admin",
                      "timedOut": false,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "a9a0e6ca-d716-46c0-98a1-79b6b5a25c87",
                      "parentUUID": "99db100f-ee1f-4eaa-a20a-56f6fde041d7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow admin to change company",
                      "fullTitle": "Contract Tests Management Functions Admin Related Transitions should allow admin to change company",
                      "timedOut": false,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "6b9142c8-ea96-400a-8ff8-45d8b102d05c",
                      "parentUUID": "99db100f-ee1f-4eaa-a20a-56f6fde041d7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not allow changing company if not admin",
                      "fullTitle": "Contract Tests Management Functions Admin Related Transitions should not allow changing company if not admin",
                      "timedOut": false,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "89b33262-65a2-4ac8-a56c-0515da72f950",
                      "parentUUID": "99db100f-ee1f-4eaa-a20a-56f6fde041d7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [],
                  "failures": [],
                  "pending": [
                    "3e465ce0-a7b0-4290-9b8e-cc3f89e766a5",
                    "a9a0e6ca-d716-46c0-98a1-79b6b5a25c87",
                    "6b9142c8-ea96-400a-8ff8-45d8b102d05c",
                    "89b33262-65a2-4ac8-a56c-0515da72f950"
                  ],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "quiet": "true",
        "reportFilename": "index"
      },
      "version": "5.1.0"
    }
  }
}