{
  "stats": {
    "suites": 7,
    "tests": 19,
    "passes": 11,
    "pending": 8,
    "failures": 0,
    "start": "2020-11-09T08:22:45.732Z",
    "end": "2020-11-09T08:22:46.391Z",
    "duration": 659,
    "testsRegistered": 19,
    "passPercent": 100,
    "pendingPercent": 42.10526315789473,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f51c4931-93a9-4958-bd9f-9c87ca77051e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "045bd0bb-3fe5-4825-bdac-c91759d72f31",
          "title": "Base Contract Tests",
          "fullFile": "/Users/adam/OFFICE/CRYPTO/GenesysLabs/Treasury/test/test.js",
          "file": "/test/test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9d8fa69e-0cf9-4de9-b7a3-7286c3a3758f",
              "title": "Connect to Zilliqa Blockchain",
              "fullFile": "/Users/adam/OFFICE/CRYPTO/GenesysLabs/Treasury/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should run on node version v10",
                  "fullTitle": "Base Contract Tests Connect to Zilliqa Blockchain should run on node version v10",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const node_version = process.version;\nconst ok = (node_version.substring(0,4) == 'v10.');\nexpect(ok).to.be.true;",
                  "err": {},
                  "uuid": "e1ac09f4-6ff5-4e0c-9afa-db7f4369e5d7",
                  "parentUUID": "9d8fa69e-0cf9-4de9-b7a3-7286c3a3758f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should connect to the blockchain and get the right chain_id",
                  "fullTitle": "Base Contract Tests Connect to Zilliqa Blockchain should connect to the blockchain and get the right chain_id",
                  "timedOut": false,
                  "duration": 79,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "zilliqa = new Zilliqa(network);\nconst network_id = await zilliqa.network.GetNetworkId();\nconst id = parseInt(network_id.result)\nexpect(id).to.equal(chain_id)",
                  "err": {},
                  "uuid": "70394e17-41f4-465b-8cb4-4be47e947b86",
                  "parentUUID": "9d8fa69e-0cf9-4de9-b7a3-7286c3a3758f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have the right test account",
                  "fullTitle": "Base Contract Tests Connect to Zilliqa Blockchain should have the right test account",
                  "timedOut": false,
                  "duration": 97,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "zilliqa.wallet.addByPrivateKey(privateKey);\naddress = getAddressFromPrivateKey(privateKey).toLowerCase();\nconst ok = addressEqual(address, account_address);\nexpect(ok).to.be.true;",
                  "err": {},
                  "uuid": "4ce1d288-5ada-49dc-9873-014ba437f517",
                  "parentUUID": "9d8fa69e-0cf9-4de9-b7a3-7286c3a3758f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have at least 10 ZIL in the account",
                  "fullTitle": "Base Contract Tests Connect to Zilliqa Blockchain should have at least 10 ZIL in the account",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const bal_obj = await zilliqa.blockchain.getBalance(address);\nconst balance_BN = new BN(bal_obj.result.balance);\nconst min_amount_BN = units.toQa(10, units.Units.Zil);\nconst ok = balance_BN.gte(min_amount_BN);\nexpect(ok).to.be.true;",
                  "err": {},
                  "uuid": "0a55a585-8282-429a-a02a-ab4c1df18dd1",
                  "parentUUID": "9d8fa69e-0cf9-4de9-b7a3-7286c3a3758f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e1ac09f4-6ff5-4e0c-9afa-db7f4369e5d7",
                "70394e17-41f4-465b-8cb4-4be47e947b86",
                "4ce1d288-5ada-49dc-9873-014ba437f517",
                "0a55a585-8282-429a-a02a-ab4c1df18dd1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 198,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6633fa9b-2307-445b-92a8-2200a28e4a59",
              "title": "Deployment Checks",
              "fullFile": "/Users/adam/OFFICE/CRYPTO/GenesysLabs/Treasury/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should read contract source",
                  "fullTitle": "Base Contract Tests Deployment Checks should read contract source",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let ok = false;\n      try {\n          code = fs.readFileSync('contracts/treasury.scilla', 'utf-8');\n          ok = true;\n      } catch (err) {\n        throw err \n      }\n      expect(ok).to.be.true;",
                  "err": {},
                  "uuid": "7a46212b-df64-40e2-bf10-278bf6ba32b6",
                  "parentUUID": "6633fa9b-2307-445b-92a8-2200a28e4a59",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should deploy the contract",
                  "fullTitle": "Base Contract Tests Deployment Checks should deploy the contract",
                  "timedOut": false,
                  "duration": 366,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(timeout_deploy);\nthis.slow(timeout_deploy / 2);\nconst MSG_VERSION = 1;\nconst VERSION = bytes.pack(chain_id, MSG_VERSION);\nconst myGasPrice = units.toQa('1000', units.Units.Li);\nconst init = [\n  { vname: '_scilla_version', type: 'Uint32', value: '0'},\n  { vname: 'init_admin', type:  'ByStr20', value: address },\n  { vname: 'init_company', type:  'ByStr20', value: address },\n  { vname: 'proxy_address', type:  'ByStr20', value: address },\n  { vname: 'token_address', type:  'ByStr20', value: address },\n  { vname: 'base_value', type:  'Uint256', value: '1000' }\n];\nconst contract = zilliqa.contracts.new(code, init);\n[deployTx, treasury] = await contract.deploy({\n  version: VERSION,\n  gasPrice: myGasPrice,\n  gasLimit: Long.fromNumber(15000),\n});\n//console.log(deployTx);\nconsole.log(\"        contract address =\", treasury.address);\nexpect(deployTx.txParams.receipt.success).to.be.true;",
                  "err": {},
                  "uuid": "2a73d657-4c9d-4d05-a06c-3230f39a463c",
                  "parentUUID": "6633fa9b-2307-445b-92a8-2200a28e4a59",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have correct admin address",
                  "fullTitle": "Base Contract Tests Deployment Checks should have correct admin address",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "allState = await treasury.getState();\nexpect(allState.admin).to.equal(address)",
                  "err": {},
                  "uuid": "ad2ce1c7-a09c-461e-8b7f-a89aab9c57e9",
                  "parentUUID": "6633fa9b-2307-445b-92a8-2200a28e4a59",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have correct company address",
                  "fullTitle": "Base Contract Tests Deployment Checks should have correct company address",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(allState.company).to.equal(address)",
                  "err": {},
                  "uuid": "a5342d42-15ff-4d23-aabd-3a8bd9ac9831",
                  "parentUUID": "6633fa9b-2307-445b-92a8-2200a28e4a59",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have correct base price",
                  "fullTitle": "Base Contract Tests Deployment Checks should have correct base price",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(allState.token_price).to.equal('1000')",
                  "err": {},
                  "uuid": "e4061f28-2630-4b98-8dd1-43392610d680",
                  "parentUUID": "6633fa9b-2307-445b-92a8-2200a28e4a59",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be \"paused\" on contract creation",
                  "fullTitle": "Base Contract Tests Deployment Checks should be \"paused\" on contract creation",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(allState.paused.constructor).to.equal('True')",
                  "err": {},
                  "uuid": "81128d2c-38d5-402b-8b73-05f0f85c51eb",
                  "parentUUID": "6633fa9b-2307-445b-92a8-2200a28e4a59",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not be \"under funded\" on contract creation",
                  "fullTitle": "Base Contract Tests Deployment Checks should not be \"under funded\" on contract creation",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(allState.under_funded.constructor).to.equal('False')",
                  "err": {},
                  "uuid": "3bbbe3b7-df6d-4d85-892c-561eedcaab45",
                  "parentUUID": "6633fa9b-2307-445b-92a8-2200a28e4a59",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7a46212b-df64-40e2-bf10-278bf6ba32b6",
                "2a73d657-4c9d-4d05-a06c-3230f39a463c",
                "ad2ce1c7-a09c-461e-8b7f-a89aab9c57e9",
                "a5342d42-15ff-4d23-aabd-3a8bd9ac9831",
                "e4061f28-2630-4b98-8dd1-43392610d680",
                "81128d2c-38d5-402b-8b73-05f0f85c51eb",
                "3bbbe3b7-df6d-4d85-892c-561eedcaab45"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 379,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "64521316-530e-43e1-b852-9cf9a640b55d",
          "title": "Contract Tests",
          "fullFile": "/Users/adam/OFFICE/CRYPTO/GenesysLabs/Treasury/test/test.js",
          "file": "/test/test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9af975d4-77ff-4f2c-8836-bc5c48e9f8de",
              "title": "Management Functions",
              "fullFile": "/Users/adam/OFFICE/CRYPTO/GenesysLabs/Treasury/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "150e2fe2-718b-4e00-bcba-cc1250ff437c",
                  "title": "Pausing Related Transitions",
                  "fullFile": "/Users/adam/OFFICE/CRYPTO/GenesysLabs/Treasury/test/test.js",
                  "file": "/test/test.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should only allow admin to pause when unpaused",
                      "fullTitle": "Contract Tests Management Functions Pausing Related Transitions should only allow admin to pause when unpaused",
                      "timedOut": false,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "a27203d0-33b4-41a8-8793-93639f8b5c28",
                      "parentUUID": "150e2fe2-718b-4e00-bcba-cc1250ff437c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should only allow admin to unpause when paused",
                      "fullTitle": "Contract Tests Management Functions Pausing Related Transitions should only allow admin to unpause when paused",
                      "timedOut": false,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "844fd1b8-42b5-4a1f-b830-4bf059baf0c5",
                      "parentUUID": "150e2fe2-718b-4e00-bcba-cc1250ff437c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not only pausing if not admin",
                      "fullTitle": "Contract Tests Management Functions Pausing Related Transitions should not only pausing if not admin",
                      "timedOut": false,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "76d27c85-31ca-4488-9fd0-268189046ad1",
                      "parentUUID": "150e2fe2-718b-4e00-bcba-cc1250ff437c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not only unpausing if not admin",
                      "fullTitle": "Contract Tests Management Functions Pausing Related Transitions should not only unpausing if not admin",
                      "timedOut": false,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "7a4df398-24c2-4211-976c-1fc07054d2d7",
                      "parentUUID": "150e2fe2-718b-4e00-bcba-cc1250ff437c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [],
                  "failures": [],
                  "pending": [
                    "a27203d0-33b4-41a8-8793-93639f8b5c28",
                    "844fd1b8-42b5-4a1f-b830-4bf059baf0c5",
                    "76d27c85-31ca-4488-9fd0-268189046ad1",
                    "7a4df398-24c2-4211-976c-1fc07054d2d7"
                  ],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "a700a884-244e-47ea-8027-332de8c7bce9",
                  "title": "Admin Related Transitions",
                  "fullFile": "/Users/adam/OFFICE/CRYPTO/GenesysLabs/Treasury/test/test.js",
                  "file": "/test/test.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should allow admin to change admin",
                      "fullTitle": "Contract Tests Management Functions Admin Related Transitions should allow admin to change admin",
                      "timedOut": false,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "a3579f9d-755a-4777-b56e-95f9df6ac66b",
                      "parentUUID": "a700a884-244e-47ea-8027-332de8c7bce9",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not allow changing admin if not admin",
                      "fullTitle": "Contract Tests Management Functions Admin Related Transitions should not allow changing admin if not admin",
                      "timedOut": false,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "5577a6d2-506e-4bec-8e4b-303126e0a42d",
                      "parentUUID": "a700a884-244e-47ea-8027-332de8c7bce9",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow admin to change company",
                      "fullTitle": "Contract Tests Management Functions Admin Related Transitions should allow admin to change company",
                      "timedOut": false,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "e679e39a-00dd-4358-8f8e-4e7a3dd8d8f5",
                      "parentUUID": "a700a884-244e-47ea-8027-332de8c7bce9",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not allow changing company if not admin",
                      "fullTitle": "Contract Tests Management Functions Admin Related Transitions should not allow changing company if not admin",
                      "timedOut": false,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "e87865ae-624e-4fa6-a3d4-7967ffe14833",
                      "parentUUID": "a700a884-244e-47ea-8027-332de8c7bce9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [],
                  "failures": [],
                  "pending": [
                    "a3579f9d-755a-4777-b56e-95f9df6ac66b",
                    "5577a6d2-506e-4bec-8e4b-303126e0a42d",
                    "e679e39a-00dd-4358-8f8e-4e7a3dd8d8f5",
                    "e87865ae-624e-4fa6-a3d4-7967ffe14833"
                  ],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "quiet": "true"
      },
      "version": "5.1.0"
    }
  }
}